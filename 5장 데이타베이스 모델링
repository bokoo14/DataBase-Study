# 데이타베이스 모델링
## 데이타 모델링
현실 세계에 존재하는 데이터를 컴퓨터 세계의 데이타베이스로 옮기는 변환과정

## 3단계 데이타 세계 - 현실세계, 개념세계, 컴퓨터 세계
- 현실세계: 인간이 감각 기능을 통해 감지할 수 있는 실체로 되어 있는 세계
- 개념세계: 현실 세계의 실체를 개념으로 표현한 단계
- 컴퓨터 세계: 개념 세계를 컴퓨터가 처리할 수 있는 데이터로 변환한 단계

*****
## 개념적 데이터 모델링
현실 세계의 실체를 추상적 개념을 통해 개념 세계로 표현하는 과정

## 개념적 데이터 구조 - 개체 타입, 속성, 인스턴스
개념적 데이터 모델링으로 부터 얻은 결과
- 개체 타입: 현실 세계의 개체들을 추상화시킨 것 (예)학생, 교수, 과목)
- 속성: 개체 타입에 속하는 개체들의 공통적인 속성 (예) 학번, 성명, 전화번호)
- 인스턴스: 각 개체의 값 (예) "20181234, 김철수, 010-1234-4321")

개념세계의 개념적 데이터 구조는 컴퓨터(즉, DBMS)가 직접 이해할 수 없기 때문에 컴퓨터 세계는 환경에 맞도록 변환시켜야 한다

## 논리적 데이터 모델링
개념적 데이터 구조로부터 논리적 개념을 이용하여 논리적 데이터 구조(데이터 모델)로 표현하는 것

## 물리적 데이터 모델링
데이터 구조를 컴퓨터가 접근할 수 있는 물리적 데이타 구조로 변환시키는 것

## 데이터 모델링 개념
물리적 데이타 구조(저장 데이타 베이스)와 현실 세계의 일치성 -> 모델링의 quality가 좌우됨
***** 개념 -> 논리 -> 물리
현실세계(실체) -> 개념적 데이터 모델링 -> 개념세계(개념적 데이터 구조) -> 논리적 데이터 모델링 -> 논리적 데이터 구조 -> 컴퓨터 세계(물리적 데이터 모델링) -> 물리적 데이터 구조(데이터 베이스)

## 데이타 모델
- 데이타베이스 설계: 현실세계 -> 개념적 데이터 구조 -> 논리적 데이터 구조 -> 물리적 데이터 구조로 변환시키는 모든 과정
- 개념적 데이터 모델: 속성들로 기술된 개체 타입과 이 개체들 간의 관계를 이용하여 현실 세계를 표현하는 방법
- 논리적 데이터 모델: 데이터 필드로 기술된 레코드 타입과 이 레코드 타입들 간의 관계를 이용하여 개념 세계를 표현하는 방법

## 논리적 데이터 모델
- 계층 데이터 모델 - 이전
- 네트워크 데이터 모델 - 이전
- 관계형 데이터 모델 - 가장 많이 사용
- 객체 지향 데이터 모델 - 최근
- 객체-관계형 데이타 모델 - 최근 사용

## 관계
개체들 사이에 존재하는 *연관성이나 연결로서 두 개이상의 개체 타입들 간의 *사상(mapping)을 말한다
예) 학생과 교수 개체 집합만으로는 별의미를 나타내지 못하지만, "교수가 학생을 지도한다"라는 관게를 정의한다면 유용한 의미를 표현함

## 관계의 유형
사상 원소수(mapping cardinality)
- 일대일(1:1)
- 일대다(1:n)
- 다대일(n:1)
- 다대다(n:n)

## E-R 모델
개체-관계 모델(Entity - Relationship model)
1976년 P.Chen이 제안한 *개념적 데이타 모델

## E-R 다이어그램
E-R모델을 그래프 방식으로 표현한 것
- 개체 타입 -> 네모
- 관계 -> 마름모
- 속성 -> 동그라미
개체 타입은 연관된 개체 타입들을 링크로 연결하고, 사상 원소수에 따라 레이블을 붙임
또한, 속성도 가질 수 있음
관계에도 속성이 있을 수 있음

## 개체 타입 - 강한 개체 타입, 약한 개체 타입
- 강한 개체 타입: *독자적으로 존재하며 개체 타입 내에서 자신의 속성들을 사용하여 *고유하게 개체들을 식별할 수 있는 타입을 의미
- 약한 개체 타입: 키를 형성하기에 충분한 속성들을 갖지 못한 개체 타입

## 속성
- 단순 속성: 더 이상 다른 속성으로 나눌 수 없는 속성
- 복합 속성: 두 개 이상의 속성들로 이루어진 속성 예) 주소
- 다치 속성: *각 개체마다 여러 개의 값을 가질 수 있는 속성 (이중선 동그라미) 예) 취미
- 유도된 속성: 다른 속성의 값으로부터 얻어진 속성(실선) 예) 나이

## 약한 개체 타입
어떤 경우에는 개체들이 자체적으로 갖고 있는 속성들의 값에 의해서 *고유하게 식별이 안 될 때가 있다
회사에서 어떤 사원의 부양가족 이름은 다른 사원의 부양가족 이름과 같을 수 있다
해결 방안은 부양가족이 속한 사원번호를 부양가족의 이름과 결합하여 부양가족의 키로 설정하는 것
부양가족 이름처럼 *자체적으로 키를 보유하지 못한 개체를 약한 개체 타입이라 함
*****
약한 개체 타입에게 키 속성을 제공하는 개체 타입을 *소유 개체 타입(owner entity type) 또는 *식별 개체 타입(identifying entity type)이라 한다
E-R다이어그램에서 약한 개체 타입은 *이중선 직사각형으로 표기
강한 관계는 강한 개체들 사이의 관계
*강한 개체 타입과 약한 개체 타입을 연결하는 관계는 약한 관계

## 참여 제약 조건 - 전체 참여, 부분 참여
- 전체 참여: 객체 타입의 모든 객체들이 참여 (이중 실선) -> *****약한 개체 타입은 항상 관계에서 전체 참여
- 부분 참여: 일부 객체만 참여

## 논리적 데이타 모델
- 관계형 데이타 모델: 개체와 관계가 모두 테이블(릴레이션)로 표현
- 릴레이션 스키마: 다음과 같이 개체와 관계에 대한 *정의만 명세한 것


--------------------------------------------
실습
update student set juso="신암동" where sid=12331; -- 정보 바꾸기
alter table student add column classroom char(10); -- 열 추가

